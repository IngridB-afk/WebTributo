/********************************
***            FONTS          ***
********************************/
// import for google font: Poppins
@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,300;0,400;0,800;1,300;1,400;1,800&display=swap');
// free font stored in local storage
@font-face {
  font-family: eightBit;
  src: url(../media/fonts/EightBitDragon-anqx.ttf);
}

$font8bit: eightBit;

/********************************
***       COLOR PALETTE       ***
********************************/

$primary-color: #715BC2;
$secondary-color: #C42177;
$thirdly-color: #ffffff;
$forthly-color: #0C1115;
$bold: #0C1115;

$carousel-text-color: #fff;

/* Media Queries simplified using Sass mixins
========================================================= */

// a map of breakpoints.
$breakpoints: (
  phone: 576px,
  tablet: 768px,
  tablet-lg: 992px,
  desktop: 1200px,
  desktop-lg: 1400px,
  desktop-xl: 1600px
  );

// mixin called in place of mediaqueries for-size
@mixin for-size($breakpoint, $direction:down) {

// if the breakpoint exists in the map.
@if map-has-key($breakpoints, $breakpoint) {

// get the breakpoint value.
$breakpoint-value: map-get($breakpoints, $breakpoint);

// determine the direction and then write the media query.
@if $direction == up {
  @media (min-width: $breakpoint-value) {
    @content;
  }
}
@else if $direction == down {
  @media (max-width: $breakpoint-value) {
    @content;
    }
  }
}
// if the breakpoint doesn't exist in the map, pass a manual breakpoint
@else {
  @if $direction == up {
    @media (min-width: $breakpoint) {
      @content;
    }
  }
  @else if $direction == down {
    @media (max-width: $breakpoint) {
      @content;
      }
    }
  }
}

/********************************
***       COMMON STYLES       ***
********************************/

h3 {
  font-family: eightBit;
}

// anchors with no decorations
a{
  text-decoration: none;
  outline: none;
}

// grow animation
.grow { 
  transition: all .2s ease-in-out; 
  filter: initial;
}
  
.grow:hover { 
  transform: scale(1.2);
  filter: saturate(300%);
}

// shrink animation

.shrink { 
  transition: all .2s ease-in-out; 
  filter: initial;
  }
  
  .shrink:hover { 
  transform: scale(0.9); 
  filter: saturate(300%);
  }